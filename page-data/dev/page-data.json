{"componentChunkName":"component---src-templates-category-page-js","path":"/dev","result":{"data":{"site":{"siteMetadata":{"title":"bestalign's dev blog","categories":[{"displayText":"홈","priority":0,"name":"home","url":"/"},{"displayText":"TIL","priority":1,"name":"til","url":"/til"},{"displayText":"개발","priority":2,"name":"dev","url":"/dev"},{"displayText":"독서","priority":3,"name":"reading","url":"/reading"},{"displayText":"번역","priority":4,"name":"translation","url":"/translation"},{"displayText":"일기","priority":5,"name":"everydaylife","url":"/everydaylife"}]}},"allMarkdownRemark":{"nodes":[{"excerpt":"…","fields":{"slug":"/dev/hexo-to-gatsby-migration-2/"},"frontmatter":{"date":"Jun 23, 2021","title":"Hexo에서 Gatsby로 플랫폼 이전하기 2"}},{"excerpt":"…","fields":{"slug":"/dev/hexo-to-gatsby-migration-1/"},"frontmatter":{"date":"Jun 11, 2021","title":"Hexo에서 Gatsby로 플랫폼 이전하기 1"}},{"excerpt":"Mockito가 지원하는 기능은 간단한 기능의 유닛테스트에는 충분하지만 코드 구조가 복잡할 경우 테스트하기에 힘든 부분이 많다. 혹은 반대로, 테스트를 위해서 좋은 코드 구조를 포기해야만 하는 경우도 있다. PowerMock…","fields":{"slug":"/dev/intro-powermock-1/"},"frontmatter":{"date":"May 07, 2017","title":"PowerMock 사용하기 1"}},{"excerpt":"…","fields":{"slug":"/dev/favor-use-of-standard-exceptions/"},"frontmatter":{"date":"Apr 12, 2017","title":"Method Parameter and Exception Handling"}},{"excerpt":"Mockito 사용하기 1에서 이어지는 글이다. @Mock Annotation Mock 생성은 쓸데없이 반복적이다.  Annotation을 사용하면 좀 더 간단하게 mock…","fields":{"slug":"/dev/intro-mockito-2/"},"frontmatter":{"date":"Jul 10, 2016","title":"Mockito 사용하기 2"}},{"excerpt":"이번에 안드로이드 개발을 시작하게 되면서 Mockito와 PowerMock을 처음 만져보게 되었다. Java로 계속 개발을 해왔지만 사용한 유닛테스트 프레임워크와는 사용법이 좀 달랐고, Mockio와 PowerMock…","fields":{"slug":"/dev/intro-mockito-1/"},"frontmatter":{"date":"Jul 08, 2016","title":"Mockito 사용하기 1"}},{"excerpt":"원문: http://blog.jeremymartin.name/2008/03/understanding-loose-typing-in.html JavaScript: The Right Way에는 부분적으로 번역되어있기 때문에 전문을 번역해보았다. 대략…","fields":{"slug":"/dev/understanding-loose-typing-in-javascript/"},"frontmatter":{"date":"Oct 21, 2015","title":"자바스크립트의 느슨한 타입(Loose Typing) 이해하기"}},{"excerpt":"JavaScript의 함수는 1급 객체(first class object)이다. 이 글에서는 1급 객체가 무엇이고 왜 이것이 JavaScript에서 중요한지 이야기해 보고자 한다. 먼저 1급 시민(first class citizen…","fields":{"slug":"/dev/first-class-object/"},"frontmatter":{"date":"Oct 18, 2015","title":"JavaScript의 함수는 1급 객체(first class object)이다"}},{"excerpt":"원본: http://ss64.com/osx/syntax-bashkeyboard.html 이미 아시는 분들도 많겠지만 Emacs의 단축키 중 어느정도가 OS X…","fields":{"slug":"/dev/osx-bash-keyboard-shortcuts/"},"frontmatter":{"date":"Aug 30, 2015","title":"OS X Bash 키보드 단축키"}},{"excerpt":"C++나 Java는 언어자체에서 상속을 위한 방법을 지원하는데 반해서 JavaScript는 이상하게도 특별히 상속을 위해 따로 지원하는 문법이 없다. 더욱이 class가 아닌 prototype…","fields":{"slug":"/dev/javascript-inheritance/"},"frontmatter":{"date":"Aug 02, 2015","title":"JavaScript 상속"}},{"excerpt":"Prototype Chain JavaScript의 Prototype Chain은 [Prototype]으로 이루어지는 object들의 연결을 말한다. JavaScript의 Primitive Type을 제외한 모든 object는 [Prototype…","fields":{"slug":"/dev/prototype-chain/"},"frontmatter":{"date":"Jul 28, 2015","title":"Prototype Chain and Property Shadowing"}},{"excerpt":"JavaScript에서도 다른 여타 언어들처럼 instance를 생성할 떄 new를 사용한다. JavaScript는 prototype으로 instance를 생성해야 하기 때문에 Java나 C…","fields":{"slug":"/dev/new-prototype/"},"frontmatter":{"date":"Jul 20, 2015","title":"new와 prototype"}},{"excerpt":"C/C++, Java, 그리고 JavaScript 같이 우리가 접하는 대부분의 언어들은 Lexical Scope를 사용한다. Lexical Scope는 Static Scope라고도 불린다. 반대의 방식으로는 Dynamic Scope가 있으며 Perl…","fields":{"slug":"/dev/lexical-scope-and-dynamic-scope/"},"frontmatter":{"date":"Jul 12, 2015","title":"Lexical Scope and Dynamic Scope"}},{"excerpt":"JavaScript의 prototype를 처음부터 다시 공부하면서 적어보았다. C/C++와 Java로 프로그래밍을 시작했고 오래써왔기 때문에 prototype…","fields":{"slug":"/dev/javascript-prototype/"},"frontmatter":{"date":"Jul 07, 2015","title":"JavaScript Prototype"}},{"excerpt":"JavaScript data type은 다음과 같다. 5개의 primitive type — 얼마전에 새로 나온 ECMAScript 2015의 스펙에서는 symbol type이 추가 — 그리고 하나의 object type있다. primitive type…","fields":{"slug":"/dev/javascript-data-type/"},"frontmatter":{"date":"Jun 29, 2015","title":"JavaScript Data Types"}}]}},"pageContext":{"categoryName":"dev","categoryDisplayText":"개발","categoryDescription":"개발, 기술, 방법론 등에 관해 직접 작성합니다."}},"staticQueryHashes":["2841359383"]}